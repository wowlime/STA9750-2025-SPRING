[
  {
    "objectID": "data/mp04/mp04.html",
    "href": "data/mp04/mp04.html",
    "title": "Exploring US Political Shifts from 2020 to 2024",
    "section": "",
    "text": "With the recent presidential election that brought Trump back into office, we wanted to explore the data from the 2020 and 2024 elections and see the politial shift from 2020 to 2024."
  },
  {
    "objectID": "data/mp04/mp04.html#americas-political-shift",
    "href": "data/mp04/mp04.html#americas-political-shift",
    "title": "Exploring US Political Shifts from 2020 to 2024",
    "section": "",
    "text": "With the recent presidential election that brought Trump back into office, we wanted to explore the data from the 2020 and 2024 elections and see the politial shift from 2020 to 2024."
  },
  {
    "objectID": "data/mp04/mp04.html#acquiring-data",
    "href": "data/mp04/mp04.html#acquiring-data",
    "title": "Exploring US Political Shifts from 2020 to 2024",
    "section": "Acquiring Data",
    "text": "Acquiring Data\nFor the analysis, we are focusing on the states and their counties, so we will be downloading and scraping data from the Census Bureau and Wikipedia.\n\nUS County Shapefile\nFirst, we wanted to download the US County Shapefile data from the Census Bureau website.\n\n\nCode\ndir_path &lt;- \"data/mp04\"\nzip_file &lt;- file.path(dir_path, \"cb_2023_us_county_500k.zip\")\nshapefile_url &lt;- \"https://www2.census.gov/geo/tiger/GENZ2023/shp/cb_2023_us_county_500k.zip\"\nif (!dir_exists(dir_path)) {\n  dir_create(dir_path)\n}\nif (!file_exists(zip_file)) {\n  download.file(shapefile_url, destfile = zip_file, mode = \"wb\")\n}\nshp_file &lt;- file.path(dir_path, \"cb_2023_us_county_500k.shp\")\nif (!file_exists(shp_file)) {\n  unzip(zip_file, exdir = dir_path)\n}\ncounty_shapes &lt;- st_read(shp_file)\n\n\nReading layer `cb_2023_us_county_500k' from data source \n  `D:\\STA9750-2025-SPRING\\data\\mp04\\data\\mp04\\cb_2023_us_county_500k.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 3235 features and 12 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -179.1467 ymin: -14.5487 xmax: 179.7785 ymax: 71.38782\nGeodetic CRS:  NAD83\n\n\nCode\ncounty_shapes |&gt;\n  slice_head(n = 10) |&gt; \n  st_drop_geometry() |&gt; \n  kable(caption = \"Preview of County Shapes Dataset\")\n\n\n\nPreview of County Shapes Dataset\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSTATEFP\nCOUNTYFP\nCOUNTYNS\nGEOIDFQ\nGEOID\nNAME\nNAMELSAD\nSTUSPS\nSTATE_NAME\nLSAD\nALAND\nAWATER\n\n\n\n\n01\n003\n00161527\n0500000US01003\n01003\nBaldwin\nBaldwin County\nAL\nAlabama\n06\n4117725048\n1132887203\n\n\n01\n069\n00161560\n0500000US01069\n01069\nHouston\nHouston County\nAL\nAlabama\n06\n1501742235\n4795415\n\n\n01\n005\n00161528\n0500000US01005\n01005\nBarbour\nBarbour County\nAL\nAlabama\n06\n2292160151\n50523213\n\n\n01\n119\n00161585\n0500000US01119\n01119\nSumter\nSumter County\nAL\nAlabama\n06\n2340898915\n24634880\n\n\n05\n091\n00069166\n0500000US05091\n05091\nMiller\nMiller County\nAR\nArkansas\n06\n1616257232\n36848741\n\n\n05\n133\n00069182\n0500000US05133\n05133\nSevier\nSevier County\nAR\nArkansas\n06\n1459636819\n45919661\n\n\n05\n093\n00069899\n0500000US05093\n05093\nMississippi\nMississippi County\nAR\nArkansas\n06\n2336409866\n72224609\n\n\n06\n037\n00277283\n0500000US06037\n06037\nLos Angeles\nLos Angeles County\nCA\nCalifornia\n06\n10515988121\n1785003256\n\n\n06\n087\n00277308\n0500000US06087\n06087\nSanta Cruz\nSanta Cruz County\nCA\nCalifornia\n06\n1152818089\n419720203\n\n\n06\n097\n01657246\n0500000US06097\n06097\nSonoma\nSonoma County\nCA\nCalifornia\n06\n4080103614\n497291856\n\n\n\n\n\n\n\n2024 County-Level Election Data\nFor this data, we will be web-scraping the 2024 presidential election results on a county level from Wikipedia. There are irregularities in some states which made it difficult to scrape the data, while we were able to write a function that automatically scraped a majority of the state’s data, we were missing Alaska because they do not have counties. We are also missing Washington because (state) was in the Wiki title and Washington D.C. is also missing because it is offically called “District of Columbia” and they have “wards” instead of counties.\n\n\nCode\nstate_names &lt;- c(state.name, \"District of Columbia\")\nwiki_titles &lt;- setNames(\n  paste0(\"2024_United_States_presidential_election_in_\", gsub(\" \", \"_\", state_names)),\n  state_names\n)\nwiki_titles[\"New York\"] &lt;- \"2024_United_States_presidential_election_in_New_York\"\nwiki_titles[\"Washington\"] &lt;- \"2024_United_States_presidential_election_in_Washington_(state)\"\nwiki_titles[\"District of Columbia\"] &lt;- \"2024_United_States_presidential_election_in_the_District_of_Columbia\"\n#function to download and clean data from wiki\ndir.create(\"data/mp04/state_pages\", showWarnings = FALSE, recursive = TRUE)\nget_state_results &lt;- function(state_name) {\n  state_url &lt;- gsub(\" \", \"_\", state_name)\n  url &lt;- paste0(\"https://en.wikipedia.org/wiki/2024_United_States_presidential_election_in_\", state_url)\n  local_file &lt;- file.path(\"data/mp04/state_pages\", paste0(state_url, \".html\"))\n  if (!file.exists(local_file)) {\n    tryCatch({\n      resp &lt;- request(url) |&gt; req_perform()\n      writeLines(resp_body_string(resp), local_file)\n    }, error = function(e) {\n      message(\"Failed to download: \", state_name)\n      return(NULL)\n    })\n  }\n  page &lt;- tryCatch(read_html(local_file), error = function(e) return(NULL))\n  if (is.null(page)) return(NULL)\n  tables &lt;- page |&gt; html_elements(\"table\") |&gt; html_table()\n  county_table &lt;- tables |&gt;\n    keep(~ any(str_detect(tolower(names(.x)), \"county|parish|borough\"))) |&gt;\n    pluck(1, .default = NULL)\n  \n  if (is.null(county_table)) {\n    message(\"⚠️ No county-level table for \", state_name)\n    return(NULL)\n  }\n  \n#Clean and standardize column names\n  cleaned &lt;- county_table |&gt;\n    clean_names() |&gt;\n    mutate(state = state_name)\n  county_col &lt;- names(cleaned)[str_detect(names(cleaned), \"county|parish|borough\")][1]\n  if (!\"county\" %in% names(cleaned)) {\n    cleaned &lt;- cleaned |&gt; rename(county = all_of(county_col))\n  }\n  \n  return(cleaned)\n}\n#go through each state\nstate_names &lt;- state.name\nsafe_results &lt;- map(state_names, safely(get_state_results))\nresults &lt;- list()\nfailures &lt;- c()\n\nfor (i in seq_along(state_names)) {\n  result &lt;- safe_results[[i]]\n  if (is.null(result$result)) {\n    failures &lt;- c(failures, state_names[i])\n  } else {\n    results[[state_names[i]]] &lt;- result$result\n  }\n}\n\nelection_results_clean &lt;- bind_rows(results)\nelection_results_clean &lt;- election_results_clean |&gt;\n  select(where(~ !all(is.na(.)))) |&gt;  # drop all-NA columns\n  filter(!str_detect(county, regex(\"Total|Statewide|City|#\", ignore_case = TRUE))) |&gt;\n  mutate(across(where(is.character), ~ str_replace_all(.x, \"[,%]\", \"\")))  # remove commas/%\nwrite_csv(election_results_clean, \"data/mp04/combined_2024_county_results.csv\")\ncat(\"Failed States:\\n\")\n\n\nFailed States:\n\n\nCode\nprint(failures)\n\n\n[1] \"Alaska\"     \"Washington\"\n\n\nCode\nelection_results_clean &lt;- readr::read_csv(\"data/mp04/combined_2024_county_results.csv\")\nall_states &lt;- c(state.name, \"District of Columbia\")\nmissing_states &lt;- setdiff(all_states, unique(election_results_clean$state))\ncat(\"Missing States:\\n\")\n\n\nMissing States:\n\n\nCode\nprint(missing_states)\n\n\n[1] \"Alaska\"               \"Washington\"           \"District of Columbia\"\n\n\nTo find the data for all the missing states, we manually went into the page to see what was missing searched to see what tables we needed to add and hard coded the information.\n\n\nCode\n#ohio was missing so added code to add ohio\nget_ohio_results &lt;- function() {\n  state_name &lt;- \"Ohio\"\n  url &lt;- \"https://en.wikipedia.org/wiki/2024_United_States_presidential_election_in_Ohio\"\n  file_path &lt;- \"data/mp04/state_pages/Ohio.html\"\n  if (!file.exists(file_path)) {\n    page &lt;- request(url) |&gt; req_perform()\n    writeLines(resp_body_string(page), file_path)\n  }\n  # Read and parse\n  page &lt;- read_html(file_path)\n  tables &lt;- page |&gt; html_elements(\"table\") |&gt; html_table()\n  # Table 39 contains the data we want\n  county_table &lt;- tables[[39]]\n  cleaned &lt;- county_table |&gt;\n    clean_names() |&gt;\n    filter(!str_detect(county, regex(\"total|summary\", ignore_case = TRUE))) |&gt;\n    mutate(state = state_name)\n  return(cleaned)\n}\nohio_results &lt;- get_ohio_results()\nohio_results &lt;- ohio_results |&gt;\n  mutate(\n    donald_trump_republican_2 = as.numeric(str_replace_all(donald_trump_republican_2, \"%\", \"\")),\n    kamala_harris_democratic_2 = as.numeric(str_replace_all(kamala_harris_democratic_2, \"%\", \"\")),\n    various_candidates_other_parties_2 = as.numeric(str_replace_all(various_candidates_other_parties_2, \"%\", \"\")),\n    margin_2 = as.numeric(str_replace_all(margin_2, \"%\", \"\"))\n  )\nelection_results_2024_updated &lt;- bind_rows(election_results_clean, ohio_results)\nwrite_csv(election_results_2024_updated, \"data/mp04/combined_2024_county_results.csv\")\n#adding washington\nget_washington_2024_results &lt;- function() {\n  state_name &lt;- \"Washington\"\n  url &lt;- \"https://en.wikipedia.org/wiki/2024_United_States_presidential_election_in_Washington_(state)\"\n  file_path &lt;- \"data/mp04/state_pages/Washington_2024.html\"\n  \n  if (!file.exists(file_path)) {\n    page &lt;- request(url) |&gt; req_perform()\n    writeLines(resp_body_string(page), file_path)\n  }\n  \n  page &lt;- read_html(file_path)\n  tables &lt;- page |&gt; html_elements(\"table\") |&gt; html_table()\n  \n  county_table &lt;- tables |&gt;\n    keep(~ any(str_detect(tolower(names(.x)), \"county|parish|borough\"))) |&gt;\n    pluck(1, .default = NULL)\n  cleaned &lt;- county_table |&gt; \n    clean_names() |&gt; \n    mutate(state = state_name)\n  \n  return(cleaned)\n}\n\nwa_results &lt;- get_washington_2024_results()\n#adding dc\ndc_row &lt;- tibble(\n  county = \"District of Columbia\",\n  donald_trump_republican = 18000,  # replace with real estimate\n  donald_trump_republican_2 = 4.5,\n  kamala_harris_democratic = 378000,\n  kamala_harris_democratic_2 = 94.5,\n  various_candidates_other_parties = 4000,\n  various_candidates_other_parties_2 = 1.0,\n  margin = 360000,\n  margin_2 = 90,\n  total = 400000,\n  state = \"District of Columbia\"\n)\n#adding alaska\nak_row &lt;- tibble(\n  county = \"Statewide\",\n  donald_trump_republican = 184458,\n  donald_trump_republican_2 = 54.54,\n  kamala_harris_democratic = 140026,\n  kamala_harris_democratic_2 = 41.41,\n  various_candidates_other_parties = 14371,\n  various_candidates_other_parties_2 = 4.05,\n  margin = 44332,\n  margin_2 = 13.13,\n  total = 338855,\n  state = \"Alaska\"\n)\n#adding washington\nwa_results &lt;- wa_results |&gt;\n  mutate(across(\n    c(\n      donald_trump_republican,\n      donald_trump_republican_2,\n      kamala_harris_democratic,\n      kamala_harris_democratic_2,\n      various_candidates_other_parties,\n      various_candidates_other_parties_2,\n      margin,\n      margin_2,\n      total\n    ),\n    ~ as.numeric(str_replace_all(.x, \"[%,]\", \"\"))\n  ))\nak_row &lt;- ak_row |&gt;\n  mutate(across(\n    c(\n      donald_trump_republican,\n      donald_trump_republican_2,\n      kamala_harris_democratic,\n      kamala_harris_democratic_2,\n      various_candidates_other_parties,\n      various_candidates_other_parties_2,\n      margin,\n      margin_2,\n      total\n    ),\n    ~ as.numeric(str_replace_all(.x, \"[%,]\", \"\"))\n  ))\n\ndc_row &lt;- dc_row |&gt;\n  mutate(across(\n    c(\n      donald_trump_republican,\n      donald_trump_republican_2,\n      kamala_harris_democratic,\n      kamala_harris_democratic_2,\n      various_candidates_other_parties,\n      various_candidates_other_parties_2,\n      margin,\n      margin_2,\n      total\n    ),\n    ~ as.numeric(str_replace_all(.x, \"[%,]\", \"\"))\n  ))\n#combining all the data\nelection_results_2024_updated &lt;- election_results_2024_updated |&gt;\n  mutate(across(\n    c(\n      donald_trump_republican,\n      donald_trump_republican_2,\n      kamala_harris_democratic,\n      kamala_harris_democratic_2,\n      various_candidates_other_parties,\n      various_candidates_other_parties_2,\n      margin,\n      margin_2,\n      total\n    ),\n    ~ as.numeric(str_replace_all(.x, \"[%,]\", \"\"))\n  ))\nelection_results_2024_final &lt;- bind_rows(\n  election_results_2024_updated,\n  dc_row,\n  ak_row,\n  wa_results\n)\nelection_results_2024_final &lt;- bind_rows(\n  election_results_2024_updated,\n  dc_row,\n  ak_row,\n  wa_results\n)\nelection_results_2024_final &lt;- election_results_2024_final |&gt;\n  filter(!str_detect(county, regex(\"^county(\\\\[\\\\d+\\\\])?$\", ignore_case = TRUE)))\nelection_results_2024_final |&gt;\n  head(10) |&gt;\n  kable(caption = \"Preview of 2024 Election Results\")\n\n\n\nPreview of 2024 Election Results\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncounty\ndonald_trump_republican\ndonald_trump_republican_2\nkamala_harris_democratic\nkamala_harris_democratic_2\nvarious_candidates_other_parties\nvarious_candidates_other_parties_2\nmargin\nmargin_2\ntotal\nstate\ntotal_votes_cast\nkamala_harris_dfl\nkamala_harris_dfl_2\nkamala_harris_democratic_npl\nkamala_harris_democratic_npl_2\n\n\n\n\nAutauga\n20484\n72.43\n7439\n26.30\n358\n1.27\n13045\n46.13\n28281\nAlabama\nNA\nNA\nNA\nNA\nNA\n\n\nBaldwin\n95798\n78.36\n24934\n20.40\n1517\n1.24\n70864\n57.96\n122249\nAlabama\nNA\nNA\nNA\nNA\nNA\n\n\nBarbour\n5606\n56.88\n4158\n42.19\n91\n0.93\n1448\n14.69\n9855\nAlabama\nNA\nNA\nNA\nNA\nNA\n\n\nBibb\n7572\n81.80\n1619\n17.49\n66\n0.71\n5953\n64.31\n9257\nAlabama\nNA\nNA\nNA\nNA\nNA\n\n\nBlount\n25354\n90.03\n2576\n9.15\n233\n0.82\n22778\n80.88\n28163\nAlabama\nNA\nNA\nNA\nNA\nNA\n\n\nBullock\n1101\n26.78\n2983\n72.56\n27\n0.66\n-1882\n-45.78\n4111\nAlabama\nNA\nNA\nNA\nNA\nNA\n\n\nButler\n5172\n60.99\n3251\n38.34\n57\n0.67\n1921\n22.65\n8480\nAlabama\nNA\nNA\nNA\nNA\nNA\n\n\nCalhoun\n34912\n71.76\n13194\n27.12\n547\n1.12\n21718\n44.64\n48653\nAlabama\nNA\nNA\nNA\nNA\nNA\n\n\nChambers\n8711\n61.15\n5405\n37.94\n129\n0.91\n3306\n23.21\n14245\nAlabama\nNA\nNA\nNA\nNA\nNA\n\n\nCherokee\n11358\n87.33\n1553\n11.94\n95\n0.73\n9805\n75.39\n13006\nAlabama\nNA\nNA\nNA\nNA\nNA\n\n\n\n\n\n\n\n2020 County-Level Election Data\nFor this data we will be doing the same downloading and scraping steps we did for the 2024 dataset.\n\n\nCode\ndir.create(\"data/mp04/state_pages_2020\", showWarnings = FALSE, recursive = TRUE)\ndir.create(\"data/mp04/state_pages_2020\", showWarnings = FALSE, recursive = TRUE)\nget_state_results_2020 &lt;- function(state_name) {\n  state_url &lt;- gsub(\" \", \"_\", state_name)\n  url &lt;- paste0(\"https://en.wikipedia.org/wiki/2020_United_States_presidential_election_in_\", state_url)\n  local_file &lt;- file.path(\"data/mp04/state_pages_2020\", paste0(state_url, \".html\"))\n  if (!file.exists(local_file)) {\n    tryCatch({\n      resp &lt;- request(url) |&gt; req_perform()\n      writeLines(resp_body_string(resp), local_file)\n    }, error = function(e) {\n      message(\"Failed to download: \", state_name)\n      return(NULL)\n    })\n  }\n  page &lt;- tryCatch(read_html(local_file), error = function(e) return(NULL))\n  if (is.null(page)) return(NULL)\n  tables &lt;- page |&gt; html_elements(\"table\") |&gt; html_table()\n  county_table &lt;- tables |&gt;\n    keep(~ any(str_detect(tolower(names(.x)), \"county|parish|borough\"))) |&gt;\n    pluck(1, .default = NULL)\n  \n  if (is.null(county_table)) {\n    message(\"⚠️ No county-level table for \", state_name)\n    return(NULL)\n  }\n  \n#Clean and standardize column names\n  cleaned &lt;- county_table |&gt;\n    clean_names() |&gt;\n    mutate(state = state_name)\n  county_col &lt;- names(cleaned)[str_detect(names(cleaned), \"county|parish|borough\")][1]\n  if (!\"county\" %in% names(cleaned)) {\n    cleaned &lt;- cleaned |&gt; rename(county = all_of(county_col))\n  }\n  \n  return(cleaned)\n}\n\nstate_names &lt;- state.name\nsafe_results_2020 &lt;- map(state_names, safely(get_state_results_2020))\nresults_2020 &lt;- list()\nfailures_2020 &lt;- c()\n\nfor (i in seq_along(state_names)) {\n  result &lt;- safe_results_2020[[i]]\n  if (is.null(result$result)) {\n    failures_2020 &lt;- c(failures_2020, state_names[i])\n  } else {\n    results_2020[[state_names[i]]] &lt;- result$result\n  }\n}\n\nelection_results_2020_clean &lt;- bind_rows(results_2020)\nelection_results_2020_clean &lt;- election_results_2020_clean |&gt;\n  select(where(~ !all(is.na(.)))) |&gt;  # drop all-NA columns\n  filter(!str_detect(county, regex(\"Total|Statewide|City|#\", ignore_case = TRUE))) |&gt;\n  mutate(across(where(is.character), ~ str_replace_all(.x, \"[,%]\", \"\")))  # remove commas/%\n\nwrite_csv(election_results_2020_clean, \"data/mp04/combined_2020_county_results.csv\")\n\n# Check which states are missing\nall_states &lt;- c(state.name, \"District of Columbia\")\nelection_results_2020_clean &lt;- readr::read_csv(\"data/mp04/combined_2020_county_results.csv\")\nmissing_states_2020 &lt;- setdiff(all_states, unique(election_results_2020_clean$state))\n\ncat(\"Missing 2020 States:\\n\")\n\n\nMissing 2020 States:\n\n\nCode\nprint(missing_states_2020)\n\n\n[1] \"Alaska\"               \"Washington\"           \"District of Columbia\"\n\n\nCode\nget_ohio_2020_results &lt;- function() {\n  state_name &lt;- \"Ohio\"\n  url &lt;- \"https://en.wikipedia.org/wiki/2020_United_States_presidential_election_in_Ohio\"\n  file_path &lt;- \"data/mp04/state_pages/Ohio_2020.html\"\n\n  if (!file.exists(file_path)) {\n    page &lt;- request(url) |&gt; req_perform()\n    writeLines(resp_body_string(page), file_path)\n  }\n  page &lt;- read_html(file_path)\n  tables &lt;- page |&gt; html_elements(\"table\") |&gt; html_table()\n  \n  if (length(tables) &lt; 38) {\n    message(\"Table 398not found.\")\n    return(NULL)\n  }\n  \n  county_table &lt;- tables[[38]]\n  \n  cleaned &lt;- county_table |&gt;\n    clean_names() |&gt;\n    rename(county = 1) |&gt;  \n    filter(!str_detect(county, regex(\"total|summary\", ignore_case = TRUE))) |&gt;\n    mutate(state = state_name)\n  \n  return(cleaned)\n}\nohio_2020_results &lt;- get_ohio_2020_results()\n#alaska 2020 info\nak_2020_row &lt;- tibble(\n  county = \"Statewide\",\n  donald_trump_republican = 189951,\n  joe_biden_democratic = 153778,\n  various_candidates_other_parties = 14917,\n  margin = 36173,\n  total = 358646,\n  state = \"Alaska\"\n)\n#washington 2020 info\nget_washington_2020_results &lt;- function() {\n  state_name &lt;- \"Washington\"\n  url &lt;- \"https://en.wikipedia.org/wiki/2020_United_States_presidential_election_in_Washington_(state)\"\n  file_path &lt;- \"data/mp04/state_pages/Washington_2020.html\"\n  \n  if (!file.exists(file_path)) {\n    page &lt;- request(url) |&gt; req_perform()\n    writeLines(resp_body_string(page), file_path)\n  }\n  \n  page &lt;- read_html(file_path)\n  tables &lt;- page |&gt; html_elements(\"table\") |&gt; html_table()\n  \n  county_table &lt;- tables |&gt; \n    keep(~ any(str_detect(names(.x), regex(\"county\", ignore_case = TRUE)))) |&gt; \n    pluck(1, .default = NULL)\n  \n  if (is.null(county_table)) {\n    message(\"No Washington county-level table found.\")\n    return(NULL)\n  }\n  \n  cleaned &lt;- county_table |&gt; \n    clean_names() |&gt; \n    rename(county = 1) |&gt; \n    filter(!str_detect(county, regex(\"total|summary\", ignore_case = TRUE))) |&gt; \n    mutate(state = state_name)\n  \n  return(cleaned)\n}\nwa_2020_results &lt;- get_washington_2020_results()\n\n#dc 2020 info\ndc_2020_row &lt;- tibble(\n  county = \"District of Columbia\",\n  donald_trump_republican = 18000,\n  donald_trump_republican_2 = 5.4,\n  joe_biden_democratic = 317000,\n  joe_biden_democratic_2 = 92.1,\n  various_candidates_other_parties = 4000,\n  various_candidates_other_parties_2 = 2.5,\n  margin = 299000,\n  margin_2 = 86.7,\n  total = 344000,\n  state = \"District of Columbia\"\n)\ncols_to_fix &lt;- c(\n  \"donald_trump_republican\", \"donald_trump_republican_2\",\n  \"joe_biden_democratic\", \"joe_biden_democratic_2\",\n  \"various_candidates_other_parties\", \"various_candidates_other_parties_2\",\n  \"margin\", \"margin_2\", \"total\",\n  \"howie_hawkins_green\" \n)\n\nfix_numeric &lt;- function(df) {\n  df |&gt;\n    mutate(across(any_of(cols_to_fix), ~ as.numeric(str_replace_all(.x, \"[%,]\", \"\"))))\n}\n#combining all the data\nelection_results_2020 &lt;- fix_numeric(election_results_2020_clean)\nohio_2020_results &lt;- fix_numeric(ohio_2020_results)\nak_2020_row &lt;- fix_numeric(ak_2020_row)\nwa_2020_results &lt;- fix_numeric(wa_2020_results)\ndc_2020_row &lt;- fix_numeric(dc_2020_row)\nelection_results_2020_final &lt;- bind_rows(\n  election_results_2020,\n  ohio_2020_results,\n  ak_2020_row,\n  wa_2020_results,\n  dc_2020_row\n)\nelection_results_2020_final &lt;- election_results_2020_final |&gt;\n  filter(!str_detect(county, regex(\"^county(\\\\[\\\\d+\\\\])?$\", ignore_case = TRUE)))\nelection_results_2020_final &lt;- election_results_2020_final |&gt;\n  select(where(~ !all(is.na(.x))))\nelection_results_2020_final |&gt;\n  head(10) |&gt;\n  kable(caption = \"Preview of 2020 Election Results\")\n\n\n\nPreview of 2020 Election Results\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncounty\ndonald_trump_republican\ndonald_trump_republican_2\njoe_biden_democratic\njoe_biden_democratic_2\nvarious_candidates_other_parties\nvarious_candidates_other_parties_2\nmargin\nmargin_2\ntotal\nstate\ntotal_votes_cast\njoe_biden_dfl\njoe_biden_dfl_2\ncandidate\nfirstalignment\nfirstalignment_2\nfinalalignment_a\nfinalalignment_a_2\ncountyconventiondelegates_b_2\npledgednationalconventiondelegates_c\njoe_biden_democratic_npl\njoe_biden_democratic_npl_2\njo_jorgensen_libertarian\njo_jorgensen_libertarian_2\ndon_blankenship_constitution\nhowie_hawkins_green\nhowie_hawkins_green_2\n\n\n\n\nAutauga\n19838\n71.44\n7503\n27.02\n429\n1.54\n12335\n44.42\n27770\nAlabama\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nBaldwin\n83544\n76.17\n24578\n22.41\n1557\n1.42\n58966\n53.76\n109679\nAlabama\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nBarbour\n5622\n53.45\n4816\n45.79\n80\n0.76\n806\n7.66\n10518\nAlabama\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nBibb\n7525\n78.43\n1986\n20.70\n84\n0.87\n5539\n57.73\n9595\nAlabama\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nBlount\n24711\n89.57\n2640\n9.57\n237\n0.86\n22071\n80.00\n27588\nAlabama\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nBullock\n1146\n24.84\n3446\n74.70\n21\n0.46\n-2300\n-49.66\n4613\nAlabama\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nButler\n5458\n57.53\n3965\n41.79\n65\n0.68\n1493\n15.74\n9488\nAlabama\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nCalhoun\n35101\n68.85\n15216\n29.85\n666\n1.30\n19885\n39.00\n50983\nAlabama\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nChambers\n8753\n57.27\n6365\n41.64\n166\n1.09\n2388\n15.63\n15284\nAlabama\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nCherokee\n10583\n86.03\n1624\n13.20\n94\n0.77\n8959\n72.83\n12301\nAlabama\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\n\n\n\n\n\nCombining Datasets\nAfter scraping and downloading all our data, we want to combine them to and then do some initial analysis on it.\n\n\nCode\ncounty_shapes &lt;- st_read(\"data/mp04/cb_2023_us_county_500k.shp\") |&gt;\n  mutate(\n    fips = paste0(STATEFP, COUNTYFP),\n    county_clean = tolower(str_replace_all(NAME, \"[^a-z]\", \"\")),\n    state_clean = case_when(\n      STATEFP == \"01\" ~ \"alabama\",\n      STATEFP == \"02\" ~ \"alaska\",\n      STATEFP == \"04\" ~ \"arizona\",\n      STATEFP == \"05\" ~ \"arkansas\",\n      STATEFP == \"06\" ~ \"california\",\n      STATEFP == \"08\" ~ \"colorado\",\n      STATEFP == \"09\" ~ \"connecticut\",\n      STATEFP == \"10\" ~ \"delaware\",\n      STATEFP == \"11\" ~ \"district of columbia\",\n      STATEFP == \"12\" ~ \"florida\",\n      STATEFP == \"13\" ~ \"georgia\",\n      STATEFP == \"15\" ~ \"hawaii\",\n      STATEFP == \"16\" ~ \"idaho\",\n      STATEFP == \"17\" ~ \"illinois\",\n      STATEFP == \"18\" ~ \"indiana\",\n      STATEFP == \"19\" ~ \"iowa\",\n      STATEFP == \"20\" ~ \"kansas\",\n      STATEFP == \"21\" ~ \"kentucky\",\n      STATEFP == \"22\" ~ \"louisiana\",\n      STATEFP == \"23\" ~ \"maine\",\n      STATEFP == \"24\" ~ \"maryland\",\n      STATEFP == \"25\" ~ \"massachusetts\",\n      STATEFP == \"26\" ~ \"michigan\",\n      STATEFP == \"27\" ~ \"minnesota\",\n      STATEFP == \"28\" ~ \"mississippi\",\n      STATEFP == \"29\" ~ \"missouri\",\n      STATEFP == \"30\" ~ \"montana\",\n      STATEFP == \"31\" ~ \"nebraska\",\n      STATEFP == \"32\" ~ \"nevada\",\n      STATEFP == \"33\" ~ \"new hampshire\",\n      STATEFP == \"34\" ~ \"new jersey\",\n      STATEFP == \"35\" ~ \"new mexico\",\n      STATEFP == \"36\" ~ \"new york\",\n      STATEFP == \"37\" ~ \"north carolina\",\n      STATEFP == \"38\" ~ \"north dakota\",\n      STATEFP == \"39\" ~ \"ohio\",\n      STATEFP == \"40\" ~ \"oklahoma\",\n      STATEFP == \"41\" ~ \"oregon\",\n      STATEFP == \"42\" ~ \"pennsylvania\",\n      STATEFP == \"44\" ~ \"rhode island\",\n      STATEFP == \"45\" ~ \"south carolina\",\n      STATEFP == \"46\" ~ \"south dakota\",\n      STATEFP == \"47\" ~ \"tennessee\",\n      STATEFP == \"48\" ~ \"texas\",\n      STATEFP == \"49\" ~ \"utah\",\n      STATEFP == \"50\" ~ \"vermont\",\n      STATEFP == \"51\" ~ \"virginia\",\n      STATEFP == \"53\" ~ \"washington\",\n      STATEFP == \"54\" ~ \"west virginia\",\n      STATEFP == \"55\" ~ \"wisconsin\",\n      STATEFP == \"56\" ~ \"wyoming\",\n      TRUE ~ NA_character_\n    )\n  )\n\n\nReading layer `cb_2023_us_county_500k' from data source \n  `D:\\STA9750-2025-SPRING\\data\\mp04\\data\\mp04\\cb_2023_us_county_500k.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 3235 features and 12 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -179.1467 ymin: -14.5487 xmax: 179.7785 ymax: 71.38782\nGeodetic CRS:  NAD83\n\n\nCode\nresults_2020 &lt;- bind_rows(results_2020)\n# Prepare 2020 and 2024 results with clean names\nresults_2020 &lt;- results_2020 |&gt;\n  mutate(\n    county_clean = tolower(str_replace_all(county, \"[^a-z]\", \"\")),\n    state_clean = tolower(state)\n  )\n\nresults_2024 &lt;- election_results_2024_final |&gt;\n  mutate(\n    county_clean = tolower(str_replace_all(county, \"[^a-z]\", \"\")),\n    state_clean = tolower(state)\n  )\n\n# Combine all datasets into one spatial object\nelections_combined &lt;- county_shapes |&gt;\n  left_join(results_2020, by = c(\"state_clean\", \"county_clean\"), suffix = c(\"\", \"_2020\")) |&gt;\n  left_join(results_2024, by = c(\"state_clean\", \"county_clean\"), suffix = c(\"_2020\", \"_2024\"))\n\n# Remove all-NA columns if needed\nelections_combined &lt;- elections_combined |&gt;\n  select(where(~ !all(is.na(.))))\n\nelections_combined &lt;- elections_combined |&gt;\n  mutate(donald_trump_republican_2024 = as.numeric(str_replace_all(donald_trump_republican_2024, \",\", \"\")))\nelections_combined &lt;- elections_combined |&gt;\n  mutate(\n    joe_biden_democratic = as.numeric(str_replace_all(joe_biden_democratic, \",\", \"\")),\n    total_2020 = as.numeric(str_replace_all(total_2020, \",\", \"\"))\n  )\nelections_combined &lt;- elections_combined |&gt;\n  mutate(\n    donald_trump_republican_2020 = as.numeric(str_replace_all(donald_trump_republican_2020, \",\", \"\")),\n    donald_trump_republican_2024 = as.numeric(str_replace_all(donald_trump_republican_2024, \",\", \"\"))\n  )\nelections_combined &lt;- elections_combined |&gt;\n  mutate(\n    total_2020 = as.numeric(str_replace_all(total_2020, \",\", \"\")),\n    total_2024 = as.numeric(str_replace_all(total_2024, \",\", \"\"))\n  )\nelections_combined &lt;- elections_combined |&gt;\n  mutate(\n    total_2020 = as.numeric(str_replace_all(as.character(total_2020), \",\", \"\")),\n    total_2024 = as.numeric(str_replace_all(as.character(total_2024), \",\", \"\"))\n  )\n\nView(elections_combined)\n\nelections_combined &lt;- read_csv(\"elections_combined.csv\")\nelections_combined &lt;- elections_combined |&gt;\n  left_join(\n    county_shapes |&gt; \n      st_drop_geometry() |&gt; \n      select(fips, ALAND, AWATER),\n    by = \"fips\"\n  )\nelections_combined &lt;- elections_combined |&gt;\n  janitor::clean_names() |&gt;\n  select(\n    county = name,            \n    statefp = statefp,       \n    state = state_clean,    \n    donald_trump_republican_2020,\n    joe_biden_democratic,\n    total_2020,\n    donald_trump_republican_2024,\n    kamala_harris_democratic,\n    total_2024,\n    geometry,\n    aland,                    \n    awater,\n    fips\n  )\nglimpse(elections_combined)\n\n\nRows: 3,267\nColumns: 13\n$ county                       &lt;chr&gt; \"Baldwin\", \"Houston\", \"Barbour\", \"Sumter\"…\n$ statefp                      &lt;chr&gt; \"01\", \"01\", \"01\", \"01\", \"05\", \"05\", \"05\",…\n$ state                        &lt;chr&gt; \"alabama\", \"alabama\", \"alabama\", \"alabama…\n$ donald_trump_republican_2020 &lt;dbl&gt; 83544, 32618, 5622, 1598, 11920, 3884, 72…\n$ joe_biden_democratic         &lt;dbl&gt; 24578, 12917, 4816, 4648, 4245, 1116, 455…\n$ total_2020                   &lt;dbl&gt; 109679, 46173, 10518, 6291, 16529, 5202, …\n$ donald_trump_republican_2024 &lt;dbl&gt; 95798, 32469, 5606, 1542, 11842, 3772, 69…\n$ kamala_harris_democratic     &lt;dbl&gt; 24934, 11352, 4158, 3725, 3769, 862, 3574…\n$ total_2024                   &lt;dbl&gt; 122249, 44349, 9855, 5307, 15803, 4714, 1…\n$ geometry                     &lt;chr&gt; \"list(list(c(-88.02858, -88.023991, -88.0…\n$ aland                        &lt;dbl&gt; 4117725048, 1501742235, 2292160151, 23408…\n$ awater                       &lt;dbl&gt; 1132887203, 4795415, 50523213, 24634880, …\n$ fips                         &lt;chr&gt; \"01003\", \"01069\", \"01005\", \"01119\", \"0509…"
  },
  {
    "objectID": "data/mp04/mp04.html#initial-analysis",
    "href": "data/mp04/mp04.html#initial-analysis",
    "title": "Exploring US Political Shifts from 2020 to 2024",
    "section": "Initial Analysis",
    "text": "Initial Analysis\nNow, we will do some initial analysis of questions we wanted to answer from the data we gathered.\n1. Which county or counties cast the most votes for Trump (in absolute terms) in 2024?\n\n\nCode\nelections_combined |&gt;\n  filter(!is.na(donald_trump_republican_2024)) |&gt;\n  slice_max(donald_trump_republican_2024, n = 5) |&gt;\n  select(state, county, donald_trump_republican_2024) |&gt;\n  knitr::kable(caption = \"Top 5 Counties by Trump Votes in 2024\")\n\n\n\nTop 5 Counties by Trump Votes in 2024\n\n\nstate\ncounty\ndonald_trump_republican_2024\n\n\n\n\ncalifornia\nLos Angeles\n1189862\n\n\ntexas\nHarris\n722695\n\n\ncalifornia\nOrange\n654815\n\n\ncalifornia\nSan Diego\n593270\n\n\ncalifornia\nRiverside\n463677\n\n\n\n\n\n2. Which county or counties cast the most votes for Biden (as a fraction of total votes cast) in 2020?\n\n\nCode\nelections_combined |&gt;\n  filter(!is.na(joe_biden_democratic), !is.na(total_2020)) |&gt;\n  mutate(biden_pct_2020 = joe_biden_democratic / total_2020) |&gt;\n  slice_max(biden_pct_2020, n = 5) |&gt;\n  select(state, county, biden_pct_2020) |&gt;\n  knitr::kable(caption = \"Top 5 Counties by Biden's 2020 Vote Share\")\n\n\n\nTop 5 Counties by Biden’s 2020 Vote Share\n\n\nstate\ncounty\nbiden_pct_2020\n\n\n\n\ncalifornia\nSan Francisco\n0.8525610\n\n\nmississippi\nJefferson\n0.8513306\n\n\nmississippi\nClaiborne\n0.8478310\n\n\ncalifornia\nMarin\n0.8232561\n\n\nalabama\nMacon\n0.8148573\n\n\n\n\n\n3.County with largest shift towards Trump (absolute increase in votes)\n\n\nCode\nelections_combined |&gt;\n  filter(!is.na(donald_trump_republican_2020), !is.na(donald_trump_republican_2024)) |&gt;\n  mutate(trump_vote_change = donald_trump_republican_2024 - donald_trump_republican_2020) |&gt;\n  slice_max(trump_vote_change, n = 5) |&gt;\n  select(state, county, trump_vote_change) |&gt;\n  knitr::kable(caption = \"Top 5 Counties by Increase in Trump Votes from 2020 to 2024\")\n\n\n\nTop 5 Counties by Increase in Trump Votes from 2020 to 2024\n\n\nstate\ncounty\ntrump_vote_change\n\n\n\n\ncalifornia\nLos Angeles\n44332\n\n\ntexas\nBaylor\n39704\n\n\ntexas\nTaylor\n39704\n\n\ntexas\nBexar\n28927\n\n\ntexas\nMontgomery\n28582\n\n\n\n\n\n4. Which state had the largest shift towards Harris (or smallest shift towards Trump) in 2024? (Note that the total votes for a state can be obtained by summing all counties in that state.)\n\n\nCode\nelections_combined |&gt;\n  filter(!is.na(donald_trump_republican_2020), !is.na(donald_trump_republican_2024)) |&gt;\n  group_by(state) |&gt;\n  summarise(\n    trump_2020 = sum(donald_trump_republican_2020, na.rm = TRUE),\n    trump_2024 = sum(donald_trump_republican_2024, na.rm = TRUE),\n    .groups = \"drop\"\n  ) |&gt;\n  mutate(trump_shift = trump_2024 - trump_2020) |&gt;\n  slice_min(trump_shift, n = 5) |&gt;\n  knitr::kable(caption = \"Top 5 States by Largest Decrease in Trump Votes from 2020 to 2024\")\n\n\n\nTop 5 States by Largest Decrease in Trump Votes from 2020 to 2024\n\n\nstate\ntrump_2020\ntrump_2024\ntrump_shift\n\n\n\n\noregon\n958448\n919480\n-38968\n\n\nindiana\n1729863\n1720347\n-9516\n\n\nmississippi\n756764\n747744\n-9020\n\n\nhawaii\n196865\n193664\n-3201\n\n\narkansas\n760647\n759241\n-1406\n\n\n\n\n\n5. What is the largest county, by area, in this data set?\n\n\nCode\nelections_combined |&gt;\n  filter(!is.na(aland)) |&gt;\n  slice_max(aland, n = 5) |&gt;\n  select(county, state, aland) |&gt;\n  knitr::kable(caption = \"Top 5 Largest Counties by Area (ALAND)\")\n\n\n\nTop 5 Largest Counties by Area (ALAND)\n\n\ncounty\nstate\naland\n\n\n\n\nYukon-Koyukuk\nalaska\n377055293513\n\n\nNorth Slope\nalaska\n230052121425\n\n\nBethel\nalaska\n105253430580\n\n\nNorthwest Arctic\nalaska\n92367472818\n\n\nSoutheast Fairbanks\nalaska\n64315282486\n\n\n\n\n\n6. Which county has the highest voter density (voters per unit of area) in 2020?\n\n\nCode\nelections_combined |&gt;\n  filter(!is.na(total_2020), !is.na(aland), aland &gt; 0) |&gt;\n  mutate(voter_density_2020 = total_2020 / aland) |&gt;\n  slice_max(voter_density_2020, n = 5) |&gt;\n  select(county, state, voter_density_2020) |&gt;\n  knitr::kable(caption = \"Top 5 Counties by Voter Density in 2020 (Votes per Sq. Meter)\")\n\n\n\nTop 5 Counties by Voter Density in 2020 (Votes per Sq. Meter)\n\n\ncounty\nstate\nvoter_density_2020\n\n\n\n\nSan Francisco\ncalifornia\n0.0036672\n\n\nSt. Louis\nmissouri\n0.0033559\n\n\nOrange\ncalifornia\n0.0007412\n\n\nDallas\ntexas\n0.0004079\n\n\nSt. Louis\nmissouri\n0.0004077\n\n\n\n\n\n7. Which county had the largest increase in voter turnout in 2024?\n\n\nCode\nelections_combined |&gt;\n  filter(!is.na(total_2020), !is.na(total_2024)) |&gt;\n  mutate(turnout_increase = total_2024 - total_2020) |&gt;\n  arrange(desc(turnout_increase)) |&gt;\n  select(county, state, total_2020, total_2024, turnout_increase) |&gt;\n  slice_head(n = 5) |&gt;\n  knitr::kable(caption = \"Top 5 Counties by Increase in Voter Turnout from 2020 to 2024\")\n\n\n\nTop 5 Counties by Increase in Voter Turnout from 2020 to 2024\n\n\ncounty\nstate\ntotal_2020\ntotal_2024\nturnout_increase\n\n\n\n\nBaylor\ntexas\n1702\n55417\n53715\n\n\nTaylor\ntexas\n1702\n55417\n53715\n\n\nWarren\nkentucky\n20064\n56891\n36827\n\n\nBarren\nkentucky\n20064\n56891\n36827\n\n\nMontgomery\ntexas\n271543\n307258\n35715"
  },
  {
    "objectID": "data/mp04/mp04.html#electorial-shift-from-2020-to-2024",
    "href": "data/mp04/mp04.html#electorial-shift-from-2020-to-2024",
    "title": "Exploring US Political Shifts from 2020 to 2024",
    "section": "Electorial Shift from 2020 to 2024",
    "text": "Electorial Shift from 2020 to 2024\nWe created a graph of the United States that how to see the political shift from the 2020 election to the 2024 election.\n\n\nCode\nif (!exists(\"elections_combined\")) {\n  elections_combined &lt;- read_csv(\"data/mp04/elections_combined.csv\")\n}\n\nelection_shifts &lt;- elections_combined |&gt;\n  mutate(\n    trump_pct_2020 = donald_trump_republican_2020 / total_2020,\n    biden_pct_2020 = joe_biden_democratic / total_2020,\n    trump_pct_2024 = donald_trump_republican_2024 / total_2024,\n    harris_pct_2024 = kamala_harris_democratic / total_2024,\n    margin_2020 = trump_pct_2020 - biden_pct_2020,\n    margin_2024 = trump_pct_2024 - harris_pct_2024,\n    margin_shift = margin_2024 - margin_2020,\n    margin_shift_pct = margin_shift * 100\n  ) |&gt;\n  filter(!is.na(margin_shift))\n\n\nif (!exists(\"county_shapes\")) {\n  county_shapes &lt;- st_read(\"data/mp04/cb_2023_us_county_500k.shp\")\n}\n\ncounty_shapes &lt;- county_shapes |&gt;\n  mutate(fips = paste0(STATEFP, COUNTYFP))\n\n\ncounties_with_shifts &lt;- county_shapes |&gt;\n  left_join(election_shifts |&gt;\n              select(fips, margin_shift, margin_shift_pct),\n            by = \"fips\")\n\nstates &lt;- counties_with_shifts |&gt;\n  group_by(STATEFP) |&gt;\n  summarise(geometry = st_union(geometry), .groups = \"drop\") |&gt;\n  st_as_sf()\n\nmove_ak &lt;- function(geom) {\n  geom_scaled &lt;- (geom - st_centroid(geom)) * 0.4  # scale around centroid\n  geom_shifted &lt;- geom_scaled + c(-2500000, -1300000)\n  return(geom_shifted)\n}\n\nmove_hi &lt;- function(geom) {\n  geom_shifted &lt;- geom + c(-1000000, -1400000)\n  return(geom_shifted)\n}\nstates_transformed &lt;- states |&gt;\n  st_transform(5070)\n\nstates_transformed$geometry[states_transformed$STATEFP == \"02\"] &lt;- move_ak(states_transformed$geometry[states_transformed$STATEFP == \"02\"])\nstates_transformed$geometry[states_transformed$STATEFP == \"15\"] &lt;- move_hi(states_transformed$geometry[states_transformed$STATEFP == \"15\"])\n\ncounties_transformed &lt;- counties_with_shifts |&gt;\n  st_transform(5070)\n\ncounties_transformed$geometry[counties_transformed$STATEFP == \"02\"] &lt;- move_ak(counties_transformed$geometry[counties_transformed$STATEFP == \"02\"])\ncounties_transformed$geometry[counties_transformed$STATEFP == \"15\"] &lt;- move_hi(counties_transformed$geometry[counties_transformed$STATEFP == \"15\"])\narrow_scale &lt;- 20000\n\ncounties_arrows &lt;- counties_transformed |&gt;\n  filter(!is.na(margin_shift)) |&gt;\n  mutate(\n    centroid = st_centroid(geometry),\n    x = st_coordinates(centroid)[, 1],\n    y = st_coordinates(centroid)[, 2],\n    angle = if_else(margin_shift &gt; 0, 0, pi),\n    length = abs(margin_shift) * arrow_scale,\n    x_end = x + cos(angle) * length,\n    y_end = y + sin(angle) * length\n  )\nggplot() +\n  geom_sf(data = states_transformed, fill = \"white\", color = \"gray70\", size = 0.2) +\n  geom_segment(\n    data = counties_arrows,\n    aes(x = x, y = y, xend = x_end, yend = y_end, color = margin_shift &gt; 0),\n    arrow = arrow(length = unit(0.1, \"cm\")),\n    size = 0.3,\n    alpha = 0.8\n  ) +\n  scale_color_manual(\n    values = c(\"TRUE\" = \"red\", \"FALSE\" = \"blue\"),\n    labels = c(\"TRUE\" = \"More Rep.\", \"FALSE\" = \"More Dem.\"),\n    name = \"Shift from 2020 to 2024\"\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text = element_blank(),\n    axis.title = element_blank(),\n    axis.ticks = element_blank(),\n    panel.grid = element_blank(),\n    legend.position = \"top\",\n    legend.direction = \"horizontal\"\n  ) +\n  labs(\n    title = \"County-Level Shift in Vote Margin: 2020 → 2024\",\n    caption = \"Data: Wikipedia county election results\"\n  ) +\n  coord_sf(\n    crs = st_crs(counties_transformed),\n    xlim = c(-2500000, 2500000),  # tweak these numbers\n    ylim = c(-1000000, 3500000),  # tweak these numbers\n    expand = FALSE\n  )\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"nyt_county_shift_map_large.png\", width = 18, height = 11, dpi = 300)"
  }
]